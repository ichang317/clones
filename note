pace.js – 网页自动加载进度条插件 http://github.hubspot.com/pace/docs/welcome/
Owl Carousel 2-支持触摸屏的响应式jQuery旋转木马插件
smoothScroll.js 页面平滑滚动插件
轻量级的的视差引擎Parallax.js
http://modernizr.cn/ 检测浏览器支持h5情况
https://codepen.io/  canvas插件
--------------------------------------------------------------------
sublime插件  1. colorHighlighter
2.html css js prettify 配置
{
  // Details: https://github.com/victorporof/Sublime-HTMLPrettify#using-your-own-jsbeautifyrc-options
  // Documentation: https://github.com/einars/js-beautify/
  "html": {
    "allowed_file_extensions": ["htm", "html", "xhtml", "shtml", "xml", "svg","aspx","jsp"],
    "brace_style": "collapse", // [collapse|expand|end-expand|none] Put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are
    "end_with_newline": false, // End output with newline
    "indent_char": " ", // Indentation character
    "indent_handlebars": false, // e.g. {{#foo}}, {{/foo}}
    "indent_inner_html": false, // Indent <head> and <body> sections
    "indent_scripts": "keep", // [keep|separate|normal]
    "indent_size": 2, // Indentation size
    "max_preserve_newlines": 0, // Maximum number of line breaks to be preserved in one chunk (0 disables)
    "preserve_newlines": true, // Whether existing line breaks before elements should be preserved (only works before elements, not inside tags or for text)
    "unformatted": ["a", "span", "img", "code", "pre", "sub", "sup", "em", "strong", "b", "i", "u", "strike", "big", "small", "pre", "h1", "h2", "h3", "h4", "h5", "h6"], // List of tags that should not be reformatted
    "wrap_line_length": 0 // Lines should wrap at next opportunity after this number of characters (0 disables)
  },
  "css": {
    "allowed_file_extensions": ["css", "scss", "sass", "less"],
    "end_with_newline": false, // End output with newline
    "indent_char": " ", // Indentation character
    "indent_size": 2, // Indentation size
    "newline_between_rules": true, // Add a new line after every css rule
    "selector_separator": " ",
    "selector_separator_newline": false // Separate selectors with newline or not (e.g. "a,\nbr" or "a, br")
  },
  "js": {
    "allowed_file_extensions": ["js", "json", "jshintrc", "jsbeautifyrc", "csslintrc"],
    "brace_style": "collapse", // [collapse|expand|end-expand|none] Put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are
    "break_chained_methods": false, // Break chained method calls across subsequent lines
    "e4x": false, // Pass E4X xml literals through untouched
    "end_with_newline": false, // End output with newline
    "indent_char": " ", // Indentation character
    "indent_level": 0, // Initial indentation level
    "indent_size": 2, // Indentation size
    "indent_with_tabs": false, // Indent with tabs, overrides `indent_size` and `indent_char`
    "jslint_happy": false, // If true, then jslint-stricter mode is enforced
    "keep_array_indentation": false, // Preserve array indentation
    "keep_function_indentation": false, // Preserve function indentation
    "max_preserve_newlines": 0, // Maximum number of line breaks to be preserved in one chunk (0 disables)
    "preserve_newlines": true, // Whether existing line breaks should be preserved
    "space_after_anon_function": false, // Should the space before an anonymous function's parens be added, "function()" vs "function ()"
    "space_before_conditional": true, // Should the space before conditional statement be added, "if(true)" vs "if (true)"
    "space_in_empty_paren": false, // Add padding spaces within empty paren, "f()" vs "f( )"
    "space_in_paren": false, // Add padding spaces within paren, ie. f( a, b )
    "unescape_strings": false, // Should printable characters in strings encoded in \xNN notation be unescaped, "example" vs "\x65\x78\x61\x6d\x70\x6c\x65"
    "wrap_line_length": 0 // Lines should wrap at next opportunity after this number of characters (0 disables)
  }
}
修改了"html"的"allowed_file_extensions"，增加了aspx和jsp的支持
修改了"css"的"selector_separator_newline"，个人觉得没必要每个选择器都要占一行
修改了"js"的"allowed_file_extensions"，增加了.csslintrc文件的支持
修改了"html"、"css"、"js"的"indent_size"，我的代码缩进为2个空格
---------------------------------------------------------------------------
chrome插件 colorZilla 、 view image info
---------------------------------------------------------------------------
---基于node环境 简单安装webpack---
webpack：一个模块加载器、打包工具（js，css，图片）

安装：
1.安装命令环境 cnpm install webpack -g
2.验证ok webpack --version
3.新建文件目录、package.json 工程文件（需要依赖的模块、库描述）  npm .init
4.安装本地webpack  cnpm install webpack -D / --save -dev


例子
index.html  页面
entry.js  入口文件
编写代码
命令：webpack entry.js bundle.js

自动解决依赖：
	默认支持commonJs规范

webpack 默认只支持js文件

*需要用到加载器（loader）
loader类似一种转化器，他可以把一个东西转成另一个

css文件：style-loader  css-loader

安装cnpm install  style-loader css-loader -D

注意：在webpack中，多个loader加载 用！连接

配置 webpack.config.js 配置需要的出入口、loader

webpack  开发环境下编译
webpack -p  开发环境压缩
webpack -w  监听文件改动，自动编译（速度快）
webpack -d  开启source maps 
webpack -wdp
